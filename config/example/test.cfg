# Config file for a simple simulation of the core functions: Confocal, counter,
#
#
# IMPORTANT: The format of every 'module.Class' line has changed on 28.6.2015.
# =========  The class name now needs to be explicitly given here in the config.
#		  the config line must the form package.module.Class.ClassName
global:
    # list of modules to load when starting
    startup: ['man', 'tray']

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

    module_server:
        address: 'localhost'
        port: 12345


hardware:
    mydummyscanner:
        module.Class: 'confocal_scanner_dummy.ConfocalScannerDummy'
        clock_frequency: 100
        connect:
            fitlogic: 'fit'

    mydummycounter:
        module.Class: 'slow_counter_dummy.SlowCounterDummy'
        clock_channel: '/Dev1/Ctr0'
        clock_frequency: 100
        counter_channel: '/Dev1/Ctr1'
        photon_source: '/Dev1/PFI8'
        photon_source2: '/Dev1/PFI9'
        remoteaccess: True

    mypicoharp:
        module.Class: 'picoquant.picoharp300.PicoHarp300'
        deviceID: 0

    motor:
        module.Class: 'motor.nanomax_controller_SRS.NanomaxStage'
        com_port_nano_xyz: 'COM9'
        nano_xyz_baud_rate: 115200


#    mywaterloobox:
#        module.Class: 'waterloo.waterloo_counter2.WaterlooCounter2'
#        counter_channel: 1
#        clock_frequency: 100
#        timetagger_channel_apd_0: 1



#    mywaterloobox:
 #       module.Class: 'waterloo.fast_waterloo_counter_coincidence.WaterlooCounter2'
  #      counter_channel: 1
   #     clock_frequency: 100
    #    timetagger_channel_apd_0: 1
     #   timetagger_channel_apd_1: 2
      #  coincidence: [3] # addition of the two channels in list form
       # coincidence_window: 2e-9

    mywaterloobox:
        module.Class: 'waterloo.acc_waterloo_counter_coincidence.WaterlooCounter2'
        counter_channel: 1
        clock_frequency: 100
        timetagger_channel_apd_0: 1
        averager: True
        #timetagger_channel_apd_1: 5
        #coincidence: [3] # addition of the two channels in list form
        coincidence_window: 2e-9

    keithlejy:
        module.Class: 'keithley.Keithley'
        counter_channel: 1
        clock_frequency: 100
        timetagger_channel_apd_0: 1
        averager: True
        timetagger_channel_apd_1: 5
        coincidence: [3] # addition of the two channels in list form
        coincidence_window: 2e-9

    motordummy:
        module.Class: 'motor.motor_dummy.MotorDummy'

    rotmot:
        module.Class: 'motor.aptmotor.APTOneAxisStage'
        unit: 'degree'
        motor_type_serial_label:
        -
          - 'HWTYPE_TDC001'
          - 27503007
          - 'phi'

    laser:
        module.Class: 'laser.laser_cobolt.LaserCobolt'
        remote: 'rpyc://10.70.19.73:12345/laser'



logic:

    laserlogic:
        module.Class: 'laser_logic.LaserLogic'
        connect:
            laser: 'laser'

    kernellogic:
        module.Class: 'jupyterkernel.kernellogic.QudiKernelLogic'
        remoteaccess: True

    counterlogic:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            counter1: 'mywaterloobox'
            savelogic: 'save'

#    scanner:
#        module.Class: 'confocal_logic.ConfocalLogic'
#        connect:
#            confocalscanner1: 'confocal_scanner_motor_interfuse'
#            savelogic: 'save'

#    optimizer:
#        module.Class: 'optimizer_logic.OptimizerLogic'
#        connect:
#            confocalscanner1: 'confocal_scanner_motor_interfuse'
#            fitlogic: 'fit'

    scanner:
        module.Class: 'confocal_logic.ConfocalLogic'
        connect:
            confocalscanner1: 'confocal_scanner_motor_interfuse'
            savelogic: 'save'

    optimizer:
        module.Class: 'optimizer_logic.OptimizerLogic'
        connect:
            confocalscanner1: 'confocal_scanner_motor_interfuse'
            fitlogic: 'fit'

    polarisation:
        module.Class: 'polarisation_dep_logic.PolarisationDepLogic'
        connect:
            counterlogic: 'counterlogic'
            savelogic: 'save'
            motor: 'rotmot'


    automationlogic:
        module.Class: 'automation.AutomationLogic'
        connect:
            taskrunner: 'tasklogic'

    poimanagerlogic:
        module.Class: 'poi_manager_logic.PoiManagerLogic'
        connect:
            scannerlogic: 'scanner'
            optimizer1: 'optimizer'
            savelogic: 'save'

    fit:
        module.Class: 'fit_logic.FitLogic'

    magnet_motor_interfuse:
        module.Class: 'interfuse.magnet_motor_interfuse.MagnetMotorInterfuse'
        connect:
            motorstage: 'motor'

    confocal_scanner_motor_interfuse:
        module.Class: 'interfuse.confocal_scanner_motor_interfuse.ConfocalScannerMotorInterfuse'
        connect:
            magnetinterface: 'magnet_motor_interfuse'
            confocalscanner1: 'mywaterloobox'
            fitlogic: 'fit'

    save:
        module.Class: 'save_logic.SaveLogic'
        win_data_directory: 'C:/Data'   # DO NOT CHANGE THE DIRECTORY HERE! ONLY IN THE CUSTOM FILE!
        unix_data_directory: 'Data/'
        log_into_daily_directory: True

    tasklogic:
        module.Class: 'taskrunner.TaskRunner'
        tasks:
            scannerLocationRefocus:
                module: 'refocus'
                pausetasks: ['scan']
                needsmodules:
                    optimizer: 'optimizer'

gui:
    tray:
        module.Class: 'trayicon.TrayIcon'
    man:
        module.Class: 'manager.managergui.ManagerGui'

    countergui:
        module.Class: 'counter.countergui.CounterGui'
        connect:
            counterlogic1: 'counterlogic'

    confocalgui:
        module.Class: 'confocal.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'scanner'
            savelogic: 'save'
            optimizerlogic1: 'optimizer'
        fixed_aspect_ratio_xy: True
        fixed_aspect_ratio_depth: True
        slider_stepsize: 0.001  # in micrometer
        image_x_padding: 0.02
        image_y_padding: 0.02
        image_z_padding: 0.02

    poimanager:
        module.Class: 'poimanager.poimangui.PoiManagerGui'
        connect:
            poimanagerlogic1: 'poimanagerlogic'
            confocallogic1: 'scanner'


    automation:
        module.Class: 'automation.automationgui.AutomationGui'
        connect:
            automationlogic: 'automationlogic'

    lasergui:
        module.Class: 'laser.laser.LaserGUI'
        connect:
            laserlogic: 'laserlogic'
