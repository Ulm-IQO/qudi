global:
    # list of modules to load when starting
    startup: ['man', 'tray']

    module_server:
        address: 'localhost'
        port: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

hardware:


    myspectrometer:
        module.Class: 'spectrometer.spectrometer_dummy.SpectrometerInterfaceDummy'
        connect:
            fitlogic: 'fitlogic'

#    andorspectro:
#        module.Class: 'spectrometer.andor_spectrometer.SimpleSpectrometerAndor'
#        min_wavelength: 359.42
#        max_wavelength: 929.98

    andorcamera:
        module.Class: 'spectrometer_camera.andor.andor_camera.ScectrometerCameraAndor'
        default_read_mode: 4  #Image

    mydummyodmrcounter:
        module.Class: 'odmr_counter_dummy.ODMRCounterDummy'
        clock_frequency: 100
        number_of_channels: 3
        connect:
            fitlogic: 'fitlogic'

    microwave_dummy:
        module.Class: 'microwave.mw_source_dummy.MicrowaveDummy'
        gpib_address: 'dummy'
        gpib_timeout: 20
logic:
    odmrlogic:
        module.Class: 'odmr_logic.ODMRLogic'
        connect:
            odmrcounter: 'mydummyodmrcounter'
            fitlogic: 'fitlogic'
            microwave1: 'microwave_dummy'
            savelogic: 'savelogic'
            taskrunner: 'tasklogic'

    tasklogic:
        module.Class: 'taskrunner.TaskRunner'

    savelogic:
        module.Class: 'save_logic.SaveLogic'
        win_data_directory: 'C:/Data'   # DO NOT CHANGE THE DIRECTORY HERE! ONLY IN THE CUSTOM FILE!
        unix_data_directory: 'Data/'
        log_into_daily_directory: True

#    spectrumlogic:
#        module.Class: 'spectrum.SpectrumLogic'
#        connect:
#            spectrometer: 'andorcamera'
#            savelogic: 'savelogic'
#            odmrlogic1: 'odmrlogic'

    fitlogic:
        module.Class: 'fit_logic.FitLogic'

    kernellogic:
        module.Class: 'jupyterkernel.kernellogic.QudiKernelLogic'
        remoteaccess: True

    camera_logic:
        module.Class: 'camera_logic.CameraLogic'
        connect:
            hardware: 'andorcamera'

    pidlogic:
        module.Class: 'pid_logic_2.PIDLogic'
        features: ['SETPOINT_CONTROLLER']
        connect:
            controller: 'andorcamera'
            savelogic: 'savelogic'

gui:
    tray:
        module.Class: 'trayicon.TrayIcon'

    man:
        module.Class: 'manager.managergui.ManagerGui'

    spectrometer:
        module.Class: 'spectrometer.spectrometergui.SpectrometerGui'
        connect:
            spectrumlogic1: 'spectrumlogic'

    camera_spectro:
        module.Class: 'camera.cameragui.CameraGUI'
        #connect:
            #save_logic: 'savelogic'
    camera:
        module.Class: 'camera.cameragui.CameraGUI'
        connect:
            camera_logic: 'camera_logic'

    pidcontrol:
        module.Class: 'pidgui_2.pidgui.PIDGui'
        connect:
            pidlogic: 'pidlogic'
