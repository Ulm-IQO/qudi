##  Example ACQ4 configuration file.
##
##
##
## IMPORTANT: 	The format of every 'module' line has changed on 28.6.2015. 
##				The class name now needs to be explicitly given here in the config.
##				the config line must the form package.module.ClassName

startup:
    gui:
        tray:
            module: 'trayicon.TrayIcon'
        con:
            module: 'console.SimpleConsole.SimpleConsole'
        man:
            module: 'manager.ManagerGui.ManagerGui'
        lwin:
            module: 'log.LogWindow.LogWindow'
            stylesheet: 'logDark.qss'

## Devices are defined in another config file:
#hardware: readConfigFile('devices.cfg') 

hardware:
    mykrowave:
        module: 'mwsourcedummy.mwsourcedummy'
        gpib_address: 'dummy'
        gpib_timeout: 20
        mock: True
    mydummyscanner:
        module: 'ConfocalScannerInterfaceDummy.ConfocalScannerInterfaceDummy'
        clock_frequency: 100
        connect:
            fitlogic: 'fit.fitlogic'
    mydummycounter:
        module: 'SlowCounterInterfaceDummy.SlowCounterInterfaceDummy'
        clock_channel: '/Dev1/Ctr0'
        clock_frequency: 100
        counter_channel: '/Dev1/Ctr1'
        photon_source: '/Dev1/PFI8'
        remoteaccess: True
    mydummyodmrcounter:
        module: 'ODMRCounterInterfaceDummy.ODMRCounterInterfaceDummy'
        clock_frequency: 100
        connect:
            fitlogic: 'fit.fitlogic'
    mydummyfastcounter:
        module: 'FastCounterInterfaceDummy.FastCounterInterfaceDummy'
    pulsegenerator:
        module: 'PulserInterfaceDummy.PulserInterfaceDummy'
    mydummywavemeter:
        module: 'WavemeterInterfaceDummy.WavemeterInterfaceDummy'
        measurement_timing: 10

    mydummyswitch1:
        module: 'laserswitch.LaserSwitchInterfaceDummy.LaserSwitchInterfaceDummy'
    mydummyswitch2:
        module: 'laserswitch.LaserSwitchInterfaceDummy.LaserSwitchInterfaceDummy'

#    fastcounter:
#        module: 'PicoQuant.PicoHarp300'
#        deviceID: 0
#        mode:   0
#    microwaveSMR20:
#        module: 'microwave.MWSourceSMR20'
#    mypulseblaster:
#        module: 'SpinCore.PulseBlasterESRPRO'
#    mynicard:
#        module: 'NICard'
#        clock_channel: '/Dev2/Ctr0'
#        counter_channel: '/Dev2/Ctr1'
#        scanner_clock_channel: '/Dev2/Ctr2'
#        scanner_counter_channel: '/Dev2/Ctr3'
#        photon_source: '/Dev2/PFI8'
#        scanner_ao_channels: '/Dev2/AO0:3'
#        clock_frequency: 100
#        scanner_clock_frequency: 100
#        x_range: 0, 200
#        y_range: 0, 200
#        z_range: -100, 100
#        a_range: 0, 200
#        voltage_range: -10, 10
        
logic:
    ipy:
        module: 'IPythonLogic.IPythonLogic'
    sequencegenerator:
        module: 'SequenceGeneratorLogic.SequenceGeneratorLogic'

    pulseextraction:
        module: 'PulseExtractionLogic.PulseExtractionLogic'
        connect:
            fastcounter: 'mydummyfastcounter.fastcounter'

    pulseanalysis:
        module: 'PulseAnalysisLogic.PulseAnalysisLogic'
        connect:
            fastcounter: 'mydummyfastcounter.fastcounter'
            pulseextractionlogic: 'pulseextraction.pulseextractionlogic'
            sequencegenerator: 'sequencegenerator.sequencegenerator'
            pulsegenerator: 'pulsegenerator.pulsegenerator'

    counter:
        module: 'CounterLogic.CounterLogic'
        connect:
            counter1: 'mydummycounter.counter'
            savelogic: 'save.savelogic'

    laserscanner:
        module: 'LaserScanningLogic.LaserScanningLogic'
        logic_acquisition_timing: 20
        logic_update_timing: 100
        connect:
            wavemeter1: 'mydummywavemeter.highhinessewavemeter'
            savelogic: 'save.savelogic'
            counterlogic: 'counter.counterlogic'

    laserswitch:
        module: 'LaserSwitchLogic.LaserSwitchLogic'
        connect:
            switch1: 'mydummyswitch1.switch'
            switch2: 'mydummyswitch2.switch'

    scanner:
        module: 'ConfocalLogic.ConfocalLogic'
        connect:
            confocalscanner1: 'mydummyscanner.confocalscanner'
            savelogic: 'save.savelogic'

    optimizer:
        module: 'OptimizerLogic.OptimizerLogic'
        connect:
            confocalscanner1: 'mydummyscanner.confocalscanner'
            fitlogic: 'fit.fitlogic'
            scannerlogic: 'scanner.scannerlogic'

    poimanager:
        module: 'PoiManagerLogic.PoiManagerLogic'
        connect:
            scannerlogic: 'scanner.scannerlogic'
            optimizer1: 'optimizer.optimizerlogic'

    odmr:
        module: 'ODMRLogic.ODMRLogic'
        connect:
            odmrcounter: 'mydummyodmrcounter.odmrcounter'
            fitlogic: 'fit.fitlogic'
            microwave1: 'mykrowave.mwsourcedummy'
            savelogic: 'save.savelogic'

    fit:
        module: 'FitLogic.FitLogic'

    save:
        module: 'SaveLogic.SaveLogic'
        win_data_directory: 'C:/Data'   # DO NOT CHANGE THE DIRECTORY HERE! ONLY IN THE CUSTOM FILE!
        unix_data_directory: '/$HOME/'

gui:
    ipythonconsole:
        module: 'ipythongui.IPythonGui'
        connect:
            ipythonlogic: 'ipy.ipythonlogic'
    countergui:
        module: 'counter.ctrgui.CounterGui'
        connect:
            counterlogic1: 'counter.counterlogic'
    confocalgui:
        module: 'confocal.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'scanner.scannerlogic'
            savelogic: 'save.savelogic'
            optimizerlogic1: 'optimizer.optimizerlogic'
        fixed_aspect_ratio_xy: True
        fixed_aspect_ratio_depth: True
        slider_stepsize: 0.001  # in micrometer
        image_x_padding: 0.02
        image_y_padding: 0.02
        image_z_padding: 0.02
    optimizergui:
        module: 'optimizer.optimgui.OptimizerGui'
        connect:
            optimizerlogic1: 'optimizer.optimizerlogic'
    laserscanninggui:
        module: 'laserscanner.laserscangui.LaserScanningGui'
        connect:
            laserscanninglogic1: 'laserscanner.laserscanninglogic'
            savelogic: 'save.savelogic'
    laserswitchgui:
        module: 'switcher.switchgui.SwitchGui'
        connect:
            laserswitchlogic: 'laserswitch.laserswitchlogic'
    poimanagergui:
        module: 'poimanager.poimangui.PoiManagerGui'
        connect:
            poimanagerlogic1: 'poimanager.poimanagerlogic'
            confocallogic1: 'scanner.scannerlogic'
    odmrgui:
        module: 'ODMR.ODMRGui.ODMRGui'
        connect:
            odmrlogic1: 'odmr.odmrlogic'
            savelogic: 'save.savelogic'
    pulsedmeasurement:
        module: 'pulsed.PulsedMeasurementGui.PulsedMeasurementGui'
        connect:
            pulseanalysislogic: 'pulseanalysis.pulseanalysislogic'
            sequencegeneratorlogic: 'sequencegenerator.sequencegenerator'

## Base directory where ACQ4 will keep acquired data. It is recommended
## that experimenters create a hierarchy of folders within this directory to
## organize their data.
# storageDir: '/home/user/data'

configurations:
    User_1:
    User_2:

global:
    remoteport: 12345
    ## For controlling the appearance of the GUI:
    stylesheet: 'darkorange.qss'
