global:
    # list of modules to load when starting
    startup: ['man', 'tray']

    module_server:
        address: 'localhost'
        port: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'


hardware:
    high_finesse_wavemeter:
        module.Class: 'high_finesse_wavemeter.HighFinesseWavemeter'
        measurement_timing: 10.0 # in seconds

    tagger:
        module.Class: 'timetagger.timetagger.TT'
        hist:
            channel: 2
            trigger_channel: 5
            bins_width: 1000
            number_of_bins: 1000

        corr:
            channel_start: 1
            channel_stop: 2
            bins_width: 1000
            number_of_bins: 1000
            ctrate:
            channels: [1,2]

        counter:
            channels: [1,2]
            bins_width: 1000000000000
            n_values: 100

        test_channels: []

        channels_params:
            six: # cwave internal scanner
                delay: 0
                trigger_level: 3

    myspectrometer:
        module.Class: 'spectrometer.oceanoptics_spectrometer.OceanOptics'
        spectrometer_serial: 'QEP01583' #insert here the right serial number.

    pulsestreamer:
        module.Class: 'swabian_instruments.pulse_streamer.PulseStreamer'
        pulsestreamer_ip: '192.168.202.200'
        #pulsed_file_dir: 'C:\\Software\\pulsed_files'
        laser_channel: 0
        uw_x_channel: 1
        use_external_clock: False
        external_clock_option: 0

    mycounter:
        module.Class: 'timetagger_counter.TimeTaggerCounter'
        timetagger_channel_apd_0: 2
        timetagger_channel_apd_1: 1
        timetagger_sum_channels: False

    fastcounter_timetagger:
        module.Class: 'swabian_instruments.timetagger_fast_counter.TimeTaggerFastCounter'
        timetagger_channel_apd_0: 2
        timetagger_channel_apd_1: 1
        timetagger_channel_detect: 4
        timetagger_channel_sequence: 5
        timetagger_sum_channels: True


    nicard_6229:
        module.Class: 'national_instruments_x_series_tt.NationalInstrumentsXSeries'
        default_scanner_clock_frequency: 100 # optional, in Hz
        clock_channel: '/Dev1/Ctr0' 
        counter_channels: '' 
        scanner_clock_channel: '/Dev1/Ctr0' # internally connected to pixel_clock_channel
        pixel_clock_channel: '/Dev1/PFI0' # Connect to timetagger_pixel_start_ch, timetagger_pixel_stop_ch
        scanner_ao_channels:
            - '/Dev1/AO0'
            - '/Dev1/AO1'
            - '/Dev1/AO2'
        scanner_counter_channels: # won't be used | only for name sake
            - ''
            - ''
        scanner_voltage_ranges:
            - [0, 4] #do not change! 
            - [0, 4] #do not change!
            - [0, 4] #do not change!
        scanner_position_ranges:
            - [0e-6, 100e-6]
            - [0e-6, 100e-6]
            - [0e-6, 20e-6]
        timetagger_channel_apd_0: 1
        timetagger_channel_apd_1: 2
        timetagger_pixel_start_ch: 4
        timetagger_pixel_stop_ch: -4
        timetagger_sum_channels: False

        odmr_trigger_channel: '/Dev1/PFI12' 
        gate_in_channel: '/Dev1/Ctr1' # won't be used
    cwavelaser:
        module.Class: 'cwave.cwavelaser.CwaveLaser'
        cwave_ip: '192.168.202.52 :10001'
logic:
    spectrumlogic:
        module.Class: 'spectrum.SpectrumLogic'
        connect:
            spectrometer: 'myspectrometer'
            savelogic: 'savelogic'
            fitlogic: 'fitlogic'

    wavemeterloggerlogic:
        module.Class: 'wavemeter_logger_logic.WavemeterLoggerLogic'
        logic_acquisition_timing: 20
        logic_update_timing: 100
        connect:
            wavemeter1: 'high_finesse_wavemeter'
            savelogic: 'savelogic'
            counterlogic: 'counterlogic'
            fitlogic: 'fitlogic'

    cwavelogic:
        module.Class: 'cwave.cwavelogic.CwaveLogic'
        connect: 
            savelogic: 'savelogic'
            cwavelaser: 'cwavelaser'
            wavemeter: 'high_finesse_wavemeter'
            timetagger: 'tagger'

    pulsestreamerlogic:
        module.Class: 'pulser.pulser_swabian_logic.PulserLogic'
        connect:
            pulserhardware: 'pulsestreamer'

    pulserlogic:
        module.Class: 'pulser.pulser_logic.PulserLogic'
        connect:
            pulser: 'daqpulser'
    
    timetaggerlogic:
        module.Class: 'timetagger.timetaggerlogic.TimeTaggerLogic'
        connect:
            timetagger: 'tagger'
            savelogic: 'savelogic'

    counterlogic:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            counter1: 'mycounter'
            savelogic: 'savelogic'

    scannerlogic:
        module.Class: 'confocal_logic.ConfocalLogic'
        connect:
            confocalscanner1: 'scanner_tilt_interfuse'
            savelogic: 'savelogic'

    scanner_tilt_interfuse:
        module.Class: 'interfuse.scanner_tilt_interfuse.ScannerTiltInterfuse'
        connect:
            confocalscanner1: 'nicard_6229'

    optimizerlogic:
        module.Class: 'optimizer_logic.OptimizerLogic'
        connect:
            confocalscanner1: 'scanner_tilt_interfuse'
            fitlogic: 'fitlogic'
    
    savelogic:
        module.Class: 'save_logic.SaveLogic'
        win_data_directory: 'C:/Data'   # DO NOT CHANGE THE DIRECTORY HERE! ONLY IN THE CUSTOM FILE!
        unix_data_directory: 'Data/'
        log_into_daily_directory: True
        save_pdf: True
        save_png: True
    
    fitlogic:
        module.Class: 'fit_logic.FitLogic'

    tasklogic:
        module.Class: 'taskrunner.TaskRunner'
        tasks:
            scannerLocationRefocus:
                module: 'refocus'
                pausetasks: ['scan', 'odmr']
                needsmodules:
                    optimizer: 'optimizerlogic'

    poimanagerlogic:
        module.Class: 'poi_manager_logic.PoiManagerLogic'
        connect:
            scannerlogic: 'scannerlogic'
            optimiserlogic: 'optimizerlogic'
            savelogic: 'savelogic'

    kernellogic:
        module.Class: 'jupyterkernel.kernellogic.QudiKernelLogic'
        remoteaccess: True

gui:
    spectrometer:
        module.Class: 'spectrometer.spectrometergui.SpectrometerGui'
        connect:
            spectrumlogic: 'spectrumlogic'

    wavemeterlogger:
        module.Class: 'wavemeterlogger.wavemeterloggui.WavemeterLogGui'
        connect:
            wavemeterloggerlogic1: 'wavemeterloggerlogic'
            savelogic: 'savelogic'

    pulsestreamer:
        module.Class: 'pulser.pulser_swabian_gui.PulserGUI'
        connect: 
            pulserlogic: 'pulsestreamerlogic'

    pulser:
        module.Class: 'pulser.pulser_gui.PulserGUI'
        connect: 
            daqlogic: 'pulserlogic'

    tray:
        module.Class: 'trayicon.TrayIcon'

    man:
        module.Class: 'manager.managergui.ManagerGui'

    timetagger:
        module.Class: 'timetagger.ttg2.TTGui'
        connect:
            timetaggerlogic: 'timetaggerlogic'
            savelogic: 'savelogic'

    # cwave:
    #     module.Class: 'cwave.cwave_gui.LaserGUI'
    #     connect:
    #         savelogic: 'savelogic'
    #         laserlogic: 'cwavelogic'

    cwavescanner:
        module.Class: 'cwave.cwavescanner_gui.CwaveScanGui'
        connect:
            savelogic: 'savelogic'
            cwavelogic: 'cwavelogic'

    counter:
        module.Class: 'counter.countergui.CounterGui'
        connect:
            counterlogic1: 'counterlogic'
    confocal:
        module.Class: 'confocal.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'scannerlogic'
            savelogic: 'savelogic'
            optimizerlogic1: 'optimizerlogic'
        fixed_aspect_ratio_xy: True
        fixed_aspect_ratio_depth: True
        slider_stepsize: 0.001  # in micrometer
        image_x_padding: 0.02
        image_y_padding: 0.02
        image_z_padding: 0.02
        default_meter_prefix: 'u'
    
    poimanager:
        module.Class: 'poimanager.poimangui.PoiManagerGui'
        connect:
            poimanagerlogic: 'poimanagerlogic'
            scannerlogic: 'scannerlogic'